#                              -*- makefile -*-

# To run on OSX, you unfortunately need to install a driver:
# http://tattiebogle.net/index.php/ProjectRoot/Xbox360Controller/OsxDriver

default : t7eshero.exe

VERSION_TARGET=10.10
FRAMEWORKS=OSX_build/Frameworks
# Tells dyld where to find the Frameworks dir. sdl uses @rpath internally, I think.
# This is probably pretty messed up and I should just be putting the frameworks inside
# some expected place.
RPATH=-rpath @executable_path/../Frameworks
# -arch ppc won't work with mlton, sorry
#  -arch i386  is dead, long live x86_64?  -tom7 27 Oct 2015
ARCH=-arch x86_64
CPPFLAGS= ${ARCH} -I/usr/local/include -I${FRAMEWORKS}/SDL.framework/Versions/Current/Headers -I${FRAMEWORKS}/SDL_net.framework/Versions/Current/Headers -I${FRAMEWORKS}/SDL_mixer.framework/Versions/Current/Headers -I${FRAMEWORKS}/SDL_image.framework/Versions/Current/Headers -D_THREAD_SAFE -DOSX
LIBS=-L/usr/lib
# also once was /usr/local/lib on PPC?

sound.o : sound.c
	gcc -O $(CPPFLAGS) -c $< -o $@

messagebox.o : messagebox_fake.c
	gcc -O $(CPPFLAGS) -c $< -o $@

%.o : ../sdlml/%.c
	gcc -O $(CPPFLAGS) -c $< -o $@

#  -arch ppc linkopt won't work, sorry
#  -verbose 1
t7eshero.exe : sound.o sdlml.o t7eshero.mlb *.sml ../sdlml/*.sml sdlmain.o sdlnet.o messagebox_fake.o
	export MACOSX_DEPLOYMENT_TARGET=${VERSION_TARGET}
	mlton -cc-opt "-g -Dmain=SDL_main" -link-opt "${ARCH} -F${FRAMEWORKS} -framework SDL_net -framework SDL_image ${LIBS} -framework SDL -framework OpenGL -framework AGL -framework IOKit -framework Carbon -framework Cocoa ${RPATH}" -default-ann 'allowFFI true' -output $@ t7eshero.mlb sound.o sdlml.o sdlnet.o sdlmain.o messagebox_fake.o

genscore.exe : genscore.sml genscore.mlb
	mlton -output $@ -default-ann 'allowFFI true' genscore.mlb

mkupgrade.exe : mkupgrade.sml mkupgrade.mlb
	mlton -output $@ -default-ann 'allowFFI true' mkupgrade.mlb

RELEASEFILES=t7eshero.exe *.mid icon.png *.hero *.subscribed *.show

app : t7eshero.exe
	rm -rf /tmp/T7ESHero.app
	rm -f /tmp/escape-beta-osx.zip
	rm -f escape-beta-osx.zip
	mkdir /tmp/T7ESHero.app
	mkdir /tmp/T7ESHero.app/Contents
	mkdir /tmp/T7ESHero.app/Contents/MacOS
	cp -R OSX_build/* /tmp/T7ESHero.app/Contents/
	cp ${RELEASEFILES} /tmp/T7ESHero.app/Contents/MacOS/
	cp -R graphics /tmp/T7ESHero.app/Contents/MacOS/
	cp -R samples /tmp/T7ESHero.app/Contents/MacOS/
# XXX don't only need the score songs, not the source songs...
	cp -R songs /tmp/T7ESHero.app/Contents/MacOS/
	cp -R profilepics /tmp/T7ESHero.app/Contents/MacOS/
	cp -R items /tmp/T7ESHero.app/Contents/MacOS/
	mkdir /tmp/T7ESHero.app/Contents/MacOS/OSX_build
	mkdir /tmp/T7ESHero.app/Contents/MacOS/OSX_build/Frameworks
	rm -f /tmp/T7ESHero.app/Contents/Frameworks/SDL.framework/Headers/*.h
	rm -f /tmp/T7ESHero.app/Contents/Frameworks/SDL_image.framework/Headers/*.h
	rm -f /tmp/T7ESHero.app/Contents/Frameworks/SDL_net.framework/Headers/*.h
	rm -rf `find /tmp/T7ESHero.app -name CVS`
	rm -rf `find /tmp/T7ESHero.app -name .DS_Store`
	rm -rf `find /tmp/T7ESHero.app -name .svn`

desktop : app
	rm -rf ~/Desktop/T7ESHero.app.old
	rm -rf ~/Desktop/T7ESHero.app
	# -mv ~/Desktop/T7ESHero.app ~/Desktop/T7ESHero.app.old
	cp -R /tmp/T7ESHero.app ~/Desktop/

clean :
	rm -f core.* *~ *.exe *.o
