
I think that the result of certain primops (alert) can return a 'unit'
value that the compiler/runtime expects to be represented as {}. But
instead it gets the value "undefined", which can cause some minor
problems. 

There are many self-checks (e.g. closure conversion checks that it
produces closed code) that are redundant to type checking and other
later checks. We ought to run these only when a "paranoid" flag is
set.


Passes to implement:

CPS Optimization

 Should support "extern mobile type" (easy, just check
 mobility with concrete type at link time); see Dagstuhl
 talk for compelling example.


--------------------------------------------------
    Things to clean up
--------------------------------------------------

Extraneous keywords from old compilers.
Labels support "special" labels; not needed.



--------------------------------------------------
    Old bugs from Humlock; mostly obsolete
--------------------------------------------------


BUG: nullary is wrong; we define LESS as nullary and later as exp * exp, and then we can never use LESS.


BUG: exhaustiveness warning in bug-exhaust.uml

unsigned comparisons
signed division


