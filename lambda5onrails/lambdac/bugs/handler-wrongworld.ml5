(* Symptom: exception handler is at the wrong world.

   This was caused by not restoring the old handler after
   a go; the go-back is nested within the go-there, which
   makes the destination handler extend to the src handler
   if we don't restore it. *)

unit
    infix 1 :=
    fun inline (t) :=(r, a) = primapp Set { t } (r, a)
    fun inline (t) ref a = primapp Ref { t } (a)

    extern bytecode world server
    extern val server ~ server addr

    extern val alert : string -> unit @ home
    val articlename = ref []

    fun goto-article () =
        let
            (* do please-wait () *)
            (* put name = name *)
            val contents = from server get [food]
        in

            articlename := [hey];
            alert contents;

            ()
        end

    do goto-article ()

in
end
