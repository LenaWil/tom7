unit
   import "std.mlh"
   import "dom.mlh"

   val e = dom.getbyid [page]

   do runtime.no-messages ()

   fun tostring 0 = [z]
     | tostring n = [s([tostring (n - 1)])]

   fun message1 n = 
       dom.setstring (e, [innerHTML], [<div style="width : 500px ; margin-left : auto ; margin-right : auto">
                                       This page tests the 'say' construct, which emits a javascript
                                       expression (as a string) that invokes ML5 code. This button's
                                       onclick property is set to such an expression.
                                       
                                       <p>
                                       <div style="border:2px solid black; background : #EEEECC; padding : 4px; \
                                                   cursor:hand; cursor:pointer; width : 400px; text-align : center"
                                            onclick="[say message2 (n + 1)]" >
                                       this is message1, click me to be a different message!
                                       </div>
                                       </div>])
   and message2 n = 
       dom.setstring (e, [innerHTML], [<div style="width : 500px ; margin-left : auto ; margin-right : auto">
                                       The button now has different functionality (two mutually recursive ML5
                                       functions provide the two states).

                                       <p>
                                       <div style="border:2px solid black; background : #CCEECC; padding : 4px; \
                                                   cursor:hand; cursor:pointer; width : 400px; text-align : center"
                                            onclick="[say message1 (n + 1)]" >
                                       this is message2. the counter is currently [tostring n]
                                       </div>
                                       </div>
                                       ])

   do message1 0

in
end