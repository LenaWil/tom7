unit
(*   extern val + ~ int * int -> int *)
(*   extern val - ~ int * int -> int *)
(*
   extern val * ~ int * int -> int
*)

   (* bogus, but it'll work since alert can show many different types *)
(*   extern val alert : int -> unit @ home *)
(*
   extern bytecode world server
   extern val server ~ server addr
   extern val version : unit -> string @ server
*)
(*
   fun fact 0 = 1
     | fact n = fact (n - 1) 
   
   do alert (fact 5)
*)
   (* required for now *)
   extern bytecode world server

   extern val alert : int -> unit @ home
   extern val plus : int * int -> int @ home
(*
   extern val minus : int * int -> int @ home
   extern val times : int * int -> int @ home
*)
   fun loopA (x, y) : { } = 
       let in
	   loopB (plus(x, 1), y)
       end
   and loopB (x, y) : { } = 
       let in
	   alert x;
	   loopA (plus(x, 1), y)
       end

   do loopA (100, "hi")
in
end