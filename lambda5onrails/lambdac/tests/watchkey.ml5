unit
    import "std.mlh"
    import "dom.mlh"
    import "trivialdb.mlh"

    (* put binds a valid variable. the type of the expression (here, string) must be mobile *)
    put k = [tdb-test]

    extern bytecode world server
    extern val server ~ server addr
    extern val alert : string -> unit @ home

    fun setkey () =
        let
            val nb = dom.getbyid [namebox]
            put s = dom.getstring (nb, [value])
        in
            (from server 
             get trivialdb.update (k, s));
            alert [The key has been set.]
        end

    fun getkey () =
        let
            val v = from server get trivialdb.read k
        in
            alert [The key contains: [v]]
        end
(*
    val e = dom.getbyid [page]
    do dom.setstring (e, [innerHTML], [<p>For this test, the server has a persistent
                                       database with some value contained under the key "tdb-test".</p>
                                       <p>Clicking the first button will set the key to whatever string the input
                                       box contains.</p>
                                       <p>Clicking the second button will read the current value of the key
                                       and display it on the client.</p>

                                       <input type="text" id="namebox" /> <br />
                                       <div style="width: 250px; text-align : center ; border:2px outset #777777; \
                                                   background : #DDDDDD; padding : 4px; cursor:hand; cursor:pointer"
                                       onclick="[say setkey ()]" >set key</div>

                                       <p><div style="width: 250px; text-align : center ; border:2px outset #777777; \
                                                      background : #DDDDDD; padding : 4px; cursor:hand; cursor:pointer"
                                       onclick="[say getkey ()]" >get key</div></p>
                                       ])
*)

in
end
