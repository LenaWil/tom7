unit
    import "std.mlh"
    import "dom.mlh"
    import "trivialdb.mlh"

    do runtime.no-messages ()

    (* put binds a valid variable. the type of the expression (here,
       string) must be mobile *)

    put k = [tdb-test]

    extern bytecode world server
    extern val home ~ home addr
    extern val server ~ server addr
    extern val alert : string -> unit @ home

    fun getkey () =
        let
            val v = from server get trivialdb.read k
            val s = dom.getbyid [showbox]
        in
            dom.setstring (s, [innerHTML], v)
        end

    do from server 
        get trivialdb.addhook (k, cont (fn () => from home get getkey ()))

    fun setkey () =
        let
            val nb = dom.getbyid [namebox]
            put s = dom.getstring (nb, [value])
        in
            (from server 
             get trivialdb.update (k, s));
            alert [The key has been set.]
        end


    val e = dom.getbyid [page]
    do dom.setstring (e, [innerHTML], [<div style="width : 300px; padding : 1em; margin : 1em; border: 1px solid #AAAAAA">
                                       <div style="text-align : center ; font : 14px Verdana,Arial,Helvetica">\
                                       Watchkey demo</div>
                                       <p>This page uses the server's persistent database.
                                       It registers a function to be run whenever the key "[k]"
                                       is modified. Modifying that key using causes the function to
                                       run and display a message here.</p>

                                       <p>The key can be modified using the box below, 
                                       or in another browser running this test or the "trivialdb" demo.
                                       Note that many browsers have a limit on the number of simultaneous
                                       connections allowed to a given server, which can make it impossible
                                       to use the "trivialdb" demo at the same time as this one. Launching
                                       two browser instances or using two different browsers may solve this.

                                       <p>[k]'s value:<br />
                                       <div style="width: 250px; text-align : center ; 
                                                   font : 24px Verdana,Arial,Helvetica ;
                                                   border : 2px dashed #AAFFFF; padding : 6px ;
                                                   margin : 16px ; background : #DDFFFF"
                                            id="showbox">&nbsp;</div>

                                       <p><input type="text" id="namebox" /> <br />
                                       <div style="width: 250px; text-align : center ; border:2px outset #777777; \
                                                   background : #DDDDDD; padding : 4px; cursor:hand; cursor:pointer"
                                       onclick="[say setkey ()]" >set key</div>
                                       </div>
                                       ])

in
end
