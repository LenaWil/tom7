unit
(* import "std.mlh" *)

fun list-map f =
    let
        fun m nil = nil
          | m (h::t) = f h :: m t
    in
        m
    end

    (* PERF. to-lib too *)
    fun string-delimit s nil = ""
      | string-delimit s (h::nil) = h
      | string-delimit s (h1::t) = [[h1][s][string-delimit s t]]

    (* val template-cache = ref nil *)
        
    do string-delimit ", " (list-map (fn (x, _) => x) nil)
in
end
