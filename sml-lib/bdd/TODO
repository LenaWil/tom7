
Test time-of-impact, dynamic-tree, and broad-phase.


Replace awkward vec2normalize with calls to vec2normalized.

Generally: Track down imperative access to vec2, mat22, and transform.
Replace with functional ones.

Replace vec2 with real * real.
Replace mat22 with real^4.

Replace initialize_manifold everywhere with create_world_manifold.
Make create_world_manifold more direct.

The type manifold should probably be a datatype. It seems to be used
that way, and it's annoying to allocate empty arrays and let them go unused.


in dynamics, make contact fixture_{a,b} non-optional. I bet they are always SOME after initialization

maybe some more things that can be made non-optional.

looks like I wrote common/*.cpp in a number of comments where I meant collision/*.cpp.

be consistent about broadphase vs. broad_phase in identifiers

Will want to compare the performance of the metautil strategies.
References for each individual field is likely to perform better?

Should probably use metautil for some other structures, like in the
dynamic tree, and for BDDMath.sweep.

export each module's exception.

for dynamics.sml, I think it should probably just be
defining the types (opaquely!) with get_ and set_ functions.
Then we can have e.g. body-internal.sml that writes the
utilities in terms of bodycell, then we can seal to World.Body.body later.
Better to do this after all the code is in place, though.

I believe it's actually better, performance-wise, to use ref fields
instead of functional record update, as I have. Once done, slot in
two implementations and compare. Since I also use refs for identity
in a non-trivial way, might want to make a second 'a mutable type
that's a copy of ref to avoid confusion in the code. (e.g. sometimes
you will NEED to do make_mutable (!r) for correctness.)


make actual assert macros

Potential bugs:

check that FLAG_ISLAND (etc.) are fully qualified, since if a structure is open we might
accidentally refer to the wrong one, which if it has a different value would be a very
nightmarish thing to track down




+-------------------------------------------------+
|                                                 |
|    This is all that's left                      |
|                                                 |
+-------------------------------------------------+

b2ContactSolver - big, mathy.

dynamics - missing some guts

body - missing some guts

fixture - some small stuff missing

joints - everything. I just stubbed it out so that
I could write the calling code, but none have
been implemented. Should be able to test without
joints.
