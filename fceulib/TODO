

Bugs:
 - Cobra Triangle chnaged between 2559 and 2567. (just its image
   hash.) This is Mapper 7, ANROM.

Misc:
 - I've been compiling with -g instead of -O3 for quite a while.
   Do a comprehensive test to make sure it's okay!

 - proper in-memory treatment of battery backed saves. lots of
   red herrings here! also, it leaks file descriptors.

      Still to objectify:

      emulator.cc
      boards/*
      mappers/*

      A little left over in:
      ines.cc

 - boards/ should be classes, only one of which is actually present
   in the FC object. Maybe they could derive from cartinfo (or equivalent).
   Some boards are based off of others, especially MMC3 but also MMC1.

 - is "moo" defined? mappers/61.cc ifdefs it

Can get rid of:
 - ines.cpp "trainerpoo"
 - file wrappers can be massively simplified
 - file archive support
 - auto-fire
 - NSF code in mapper.h and the uncalled functions therein?

Memory todo:
 - Need to check that various objects are actually having their Free or Kill
   methods called, or roll those into the destructors, etc.

Cleanup to do:
 - There are some symbols that are both #defined (e.g. ines.h) and
   declared, maybe with #undef before like in mmc3.cc. So confusing!
 - clang format on the worst offenders
 - Common pattern in boards/* is to declare WRAMSIZE as a static
   variable but always set it to a constant.
 - CHECKs in Zapper
 - In MMC3, an EXPREGS[8] in each subclass, often obviously more than is
   necessary
 - Most mapper classes can be in namespace { } to reduce link-time
   symbols, since they are just exported through the _Init function.
 - look through Boards for Close.* and make sure they all contain override;
   same for Power and Reset.
 - DECLFW_ARGS (etc.) have an FC parameter, but we don't need this
   when they're argument signatures for member functions.

UNLA9711

Surprisingly necessary:
 - crc32 since ines.cc has a table of games and their CRCs.
 - cart md5ing
 - md5 in FECUGI; note I'm using md5 for RamChecksum though
    - If this gets threaded to cartinfo, we also need it
      for example for hack checks in onebus.cc


Possible performance improvements:
 - Can the ZNTable be replaced with a computation on the value itself?
   See my comment in x6502.cc.

 - ppulut2 is just a bit shift of ppulut1; better for cache to just
   compute it?
 
 - Is it possible to remove the indirection when reading/writing memory,
   perhaps in a special case? Currently ARead is populated with a bunch
   of function pointers (including special regions installed by various
   mappers and cart types.) Could maybe be replaced with a single function
   (inlined into x6502) per mapper configuration.

 - JIT or AOT compile x6502 code to x86 and optimize.

Notes:
"CDLogger" is "code data logger", and I have deemed it unnecessary

Helper snippets:

# alias files='find . -type f | grep -v .svn | grep -v ".o$"'
alias files="/bin/find . -type f | grep -v roms/ | grep -v roms_crash/ | grep -v .svn | grep -v '.nes$' | grep -v '.exe$' | grep -v '.o$'"
(defun find-mentions () 
 (interactive "")
 (let ((sym (thing-at-point 'symbol)))
    (message sym)
    	     ;; TODO: version that uses \\b here around sym for word
	     ;; boundaries only (like if there's a prefix)
    (let ((cmd (concat "bash -c \"grep '"
	                sym 
	   	        "' `/bin/find . -type f | grep -v roms/ | grep -v clean_ | grep -v roms_crash/ | grep -v .svn | grep -v '.nes$' | grep -v '.exe$' | grep -v '.o$'`\"")))
      (message "%s" cmd)
        (let ((res (shell-command-to-string cmd)))
           (message "%s" (concat cmd "\n" res))
        )
    )    
 )
)

// (global-set-key "\C-xm" 'find-mentions)

(defun insert-fceu ()
  (interactive "")
  (save-excursion  (insert "fceulib__.state->"))
)

(global-set-key "\C-xx" 'insert-fceu)

(defun set-cart-rectangle ()
  (interactive "")
  (string-rectangle (region-beginning) (region-end) "fceulib__cart.")
)

(global-set-key "\C-xw" 'set-cart-rectangle)

(fset 'structname
   [?H ?E ?R ?E ?X ?X ?X ?| ?\C-r ?s ?t ?r ?u ?c ?t ?  right right right right right right right ?\C-  ?\C-s ?: left left escape ?w ?\C-s ?H ?E ?R ?E ?X ?X ?X right left right backspace backspace backspace backspace backspace backspace backspace backspace ?\C-y])
(fset 'fceu
   [escape ?< escape ?% ?f ?c ?e ?u ?l ?i ?b ?_ ?_ ?. return ?f ?c ?- ?> return ?!])
(fset 'struct
   [?n ?a ?m ?e ?s ?p ?a ?c ?e ?  ?\{ return ?s ?t ?r ?u ?c ?t ?  ?H ?E ?R ?E ?X ?X ?X ?\S-  ?\{ ?\C-s ?_ ?I ?n ?i ?t left left left left left ?\C-  ?\C-r ?  right escape ?w up ?\} ?\; return ?\} up escape ?\\ ?\C-  ?\C-r ?H ?E ?R ?E down ?\C-a ?\C-u ?2 ?\C-x tab up escape ?\\ ?\C-s ?H ?E ?R ?E right left ?\C-d ?\C-d ?\C-d backspace backspace backspace backspace ?\C-y ?  ?: ?\S-  ?p ?u ?b ?l ?i ?c ?  ?C ?a ?r ?t ?I ?n ?t ?e ?r ?f ?a ?c ?e ?\C-a escape ?\\ down])
(fset 'init
   [escape ?d ?C ?a ?r ?t ?  backspace ?I ?n ?t ?e ?r ?f ?a ?c ?e escape ?\\ ?\S-  ?* ?\C-s ?\( left right ?F ?C ?\S-  ?* ?f ?c ?, ?  down ?\C-a return up tab ?r ?e ?t ?u ?r ?n ?  ?n ?e ?w ?  escape ?x ?s ?t ?r ?u ?c ?t ?n ?a ?m ?e return right left right ?\( ?F backspace ?f ?c ?, ?  ?n backspace ?i ?n ?f ?o ?\) ?\; ?\C-x ?\C-s ?\C-x ?\C-f escape backspace ?T ?O ?D ?O return escape ?x ?i ?n ?s ?e ?r ?t ?- backspace escape backspace ?i ?n ?s ?e ?r ?t tab ?k tab return ?i ?n ?i ?t return ?\C-g])
(fset 'stateregs
   [?\C-s ?S ?t ?a ?t ?e ?R ?e ?g ?s left right ?\C-s ?\{ left ?\C-  ?\C-s ?\; left ?\C-w ?\C-s ?S ?t ?a ?t ?e ?R ?e ?g ?s right left backspace backspace backspace backspace backspace backspace backspace backspace backspace ?\C-y])
(fset 'cart
   [?\( ?\( escape ?x ?s ?t ?r ?u ?c ?t ?n ?a ?m ?e return right left right ?\) ?f ?c ?- ?> ?f ?c ?e ?u ?- ?> ?c ?a ?r ?t ?i ?f ?a ?c ?e ?\) ?- ?>])
(fset 'init
   [escape ?d ?C ?a ?r ?t ?  backspace ?I ?n ?t ?e ?r ?f ?a ?c ?e escape ?\\ ?\S-  ?* ?\C-s ?\( left right ?F ?C ?\S-  ?* ?f ?c ?, ?  down ?\C-a return up tab ?r ?e ?t ?u ?r ?n ?  ?n ?e ?w ?  escape ?x ?s ?t ?r ?u ?c ?t ?n ?a ?m ?e return right left right ?\( ?F backspace ?f ?c ?, ?  ?n backspace ?i ?n ?f ?o ?\) ?\; ?\C-x ?\C-s ?\C-x ?\C-f escape backspace ?T ?O ?D ?O return escape ?x ?i ?n ?s ?e ?r ?t ?- backspace escape backspace ?i ?n ?s ?e ?r ?t tab ?k tab return ?i ?n ?i ?t return ?\C-g])
(fset 'init
   [escape ?d ?C ?a ?r ?t ?  backspace ?I ?n ?t ?e ?r ?f ?a ?c ?e escape ?\\ ?\S-  ?* ?\C-s ?\( left right ?F ?C ?\S-  ?* ?f ?c ?, ?  down ?\C-a return up tab ?r ?e ?t ?u ?r ?n ?  ?n ?e ?w ?  escape ?x ?s ?t ?r ?u ?c ?t ?n ?a ?m ?e return right left right ?\( ?F backspace ?f ?c ?, ?  ?n backspace ?i ?n ?f ?o ?\) ?\; ?\C-x ?\C-s ?\C-x ?\C-f escape backspace ?T ?O ?D ?O return escape ?x ?i ?n ?s ?e ?r ?t ?- backspace escape backspace ?i ?n ?s ?e ?r ?t tab ?k tab return ?i ?n ?i ?t return ?\C-g])
(fset 'init
   [escape ?d ?C ?a ?r ?t ?  backspace ?I ?n ?t ?e ?r ?f ?a ?c ?e escape ?\\ ?\S-  ?* ?\C-s ?\( left right ?F ?C ?\S-  ?* ?f ?c ?, ?  down ?\C-a return up tab ?r ?e ?t ?u ?r ?n ?  ?n ?e ?w ?  escape ?x ?s ?t ?r ?u ?c ?t ?n ?a ?m ?e return right left right ?\( ?F backspace ?f ?c ?, ?  ?n backspace ?i ?n ?f ?o ?\) ?\; ?\C-x ?\C-s ?\C-x ?\C-f escape backspace ?T ?O ?D ?O return escape ?x ?i ?n ?s ?e ?r ?t ?- backspace escape backspace ?i ?n ?s ?e ?r ?t tab ?k tab return ?i ?n ?i ?t return ?\C-g])
(fset 'declfw
   [?\[ ?\] ?\( ?D ?E ?C ?L ?F ?W ?_ ?A ?R ?G ?S ?\) ?\S-  ?\{ return tab tab tab ?H ?E ?R ?E ?X ?X ?X ?  left ?\C-r ?s ?t ?r ?u ?c ?t ?  right C-right right ?\C-  ?\C-s ?: left left escape ?w ?\C-s ?H ?E ?R ?E ?X ?X ?X right left backspace backspace backspace backspace backspace backspace backspace ?\( ?\( ?\C-y ?* ?\) ?f ?c ?- ?> ?f ?c ?e ?u ?l backspace ?- ?> ?c ?a ?r ?t ?i ?f ?a ?c ?e ?\) ?- ?> escape ?\\ ?\C-s ?\) left ?\( ?D ?E ?C ?L ?F ?W ?_ ?F ?O ?R ?W ?A ?R ?D ?\) ?\; return tab ?\} ?\C-x])
(fset 'init
   [escape ?d ?C ?a ?r ?t ?  backspace ?I ?n ?t ?e ?r ?f ?a ?c ?e escape ?\\ ?\S-  ?* ?\C-s ?\( left right ?F ?C ?\S-  ?* ?f ?c ?, ?  down ?\C-a return up tab ?r ?e ?t ?u ?r ?n ?  ?n ?e ?w ?  escape ?x ?s ?t ?r ?u ?c ?t ?n ?a ?m ?e return right left right ?\( ?F backspace ?f ?c ?, ?  ?n backspace ?i ?n ?f ?o ?\) ?\; ?\C-x ?\C-s ?\C-x ?\C-f escape backspace ?T ?O ?D ?O return escape ?x ?i ?n ?s ?e ?r ?t ?- backspace escape backspace ?i ?n ?s ?e ?r ?t tab ?k tab return ?i ?n ?i ?t return ?\C-g])
