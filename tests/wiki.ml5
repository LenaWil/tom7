unit
   import "std.mlh"
   import "dom.mlh"

   extern bytecode world server
   extern val alert : string -> unit @ home

   val page = dom.getbyid [page]

   fun setpage h = dom.setstring (dom.getbyid [page], [innerHTML], h)

   val article = [main]

   (* XXX to do this, need to fetch the article at this key from
      the server, then parse and render it. *)
   fun render s = [I am pretending to render [s].]

   fun togglebutton target =
       let
           (* XXX should make ref cell that indicates current state *)
           val name = [[target]_toggler]
           fun toggle-visible () =
               let
                   val e = dom.getbyid target
                   val s = dom.getnode (e, [style])
               in
                   (* XXX or block, if it was none *)
                   alert (dom.getstring(e, [text]));
                   dom.setstring (s, [display], [none])
               end
       in
           [<span id="[name]"
                  style="border:2px outset #777777; background: #DDDDDD; padding : 6px; \
                         text-weight : bold; cursor: hand; cursor: pointer;"
                  onclick="[say toggle-visible ()]">show/hide</span>]
       end

   do setpage [<span style="font-size: 20px">Welcome To WIKI5</span>
               
               <p>[togglebutton [preview]]
               <br /><div id="preview" style="border : 1px; padding : 1em">[render article]</div>
               
               <p>That's it for now!]

in
end