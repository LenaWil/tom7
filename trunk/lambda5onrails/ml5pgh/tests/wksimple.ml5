unit
    import "std.mlh"
    import "dom.mlh"
    import "trivialdb.mlh"

    (* put binds a valid variable. the type of the expression (here,
       string) must be mobile *)

    do runtime.no-messages ()

    put k = [tdb-test]
    (* k ~ string *)

    extern bytecode world server
    extern val home ~ home addr
    extern val server ~ server addr
    extern val alert : string -> unit @ home

    fun getkey () =
        let
            val v = from server get trivialdb.read k
            val s = dom.getbyid [showbox]
        in
            dom.setstring (s, [innerHTML], v)
        end

    do from server 
        get trivialdb.addhook (k, cont (fn () => from home get getkey ()))

    fun setkey () =
        let
            val nb = dom.getbyid [namebox]
            put s = dom.getstring (nb, [value])
        in
            (from server 
             get trivialdb.update (k, s))
            (* alert [The key has been set.] *)
        end


    val e = dom.getbyid [page]
    do dom.setstring (e, [innerHTML], [<p>[k]'s value:<br />
                                       <div style="width: 250px; text-align : center ; 
                                                   font : 24px Verdana,Arial,Helvetica ;
                                                   border : 2px dashed #77AAAA; padding : 6px ;
                                                   margin : 16px 0px 16px 0px ; background : #DDFFFF"
                                            id="showbox">&nbsp;</div>

                                       <p><input type="text" id="namebox" /> <br />
                                       <div style="width: 250px; text-align : center ; border:2px outset #777777; \
                                                   background : #DDDDDD; padding : 4px; cursor:hand; cursor:pointer"
                                       onclick="[say setkey ()]" >set key</div>
                                       ])

in
end
