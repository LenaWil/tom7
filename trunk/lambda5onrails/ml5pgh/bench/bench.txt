wiki2 with simple AST: 
real	1m23.137s
user	0m47.000s
sys	0m2.060s


profiling off.
memoized, delayed sets:

real    0m54.860s
user    0m43.350s
sys     0m2.330s


eager sets. it seems that since we
use these so often, it actually hurts
to be lazy about them:

real    0m50.726s
user    0m40.330s
sys     0m2.410s

first try at having a single delayed
substitution at the very outside
(added a few conformance tests, which
 might add a second or two):

real    1m50.156s
user    1m28.330s
sys     0m3.940s

oops, twice as slow!

merge substitutions in aggregations:


real    3m51.288s
user    3m8.660s
sys     0m7.840s

urrgghhh....!!


when coalescing subs, only test for same-variables:
real    3m39.447s
user    2m58.970s
sys     0m7.700s


restrict substitutions to those variables that
actually occur:

real    0m53.213s
user    0m41.510s
sys     0m2.730s

phew.


invert substitutions when rebinding a lambda:


real    0m55.122s
user    0m41.460s
sys     0m2.760s

(thought this would help more??)

don't rename when comparing, if they
already have the same name:

real    0m52.061s
user    0m41.440s
sys     0m2.380s

