(* This bug occurred when direct calls were turned on.
   the function page-article was not closed to the dictionary uvar for dom.node.

   It is caused by 'getdict' returning the outer dictionary
   (introduced by extern type) rather than the one that is passed along as its
   free-variable replacement. That results in an unclosed function even though
   there's a perfectly good dictionary in scope. Solved by clearing the dynamic
   context when we enter a closure-converted function, like we do elsewhere in
   the compiler.
*)


unit
    extern type dom.node = lc_domnode
    extern val dom.getbyid : string -> dom.node @ home = lc_document_getelementbyid

    fun page-article () =
        let in
            dom.getbyid [id.source];
            ()
        end

    do dom.getbyid [page]
    do page-article ()
    do page-article ()

in
end
