
%% CPS language

cexp : type.    %name cexp C c.
ctyp : type.    %name ctyp A a.
cval : type.    %name cval V v.



ccont  : ctyp -> ctyp.                      %postfix 8 ccont.
c&     : ctyp -> ctyp -> ctyp.              %infix none 9 c&.
cunit  : ctyp.


% continuation expressions
cmkpair : cval -> cval -> (cval -> cexp) -> cexp.
cfst    : cval -> (cval -> cexp) -> cexp.
csnd    : cval -> (cval -> cexp) -> cexp.

% continuations can end with a call to a function
ccall : cval -> cval -> cexp.
chalt : cexp.


% continuation values
cpair : cval -> cval -> cval.
clam  : (cval -> cexp) -> cval.
c1    : cval.



%% CPS Static Semantics


% |- c ok
cof : cexp -> type.              %name cof WC wc.
%mode cof *C.

% |- cv : A
cofv : cval -> ctyp -> type.     %name cofv WV wv.
%mode cofv *A *B.

co_halt : cof chalt.

co_mkpair :  cofv V1 A ->
             cofv V2 B ->
             ({v:cval} cofv v (A c& B) -> 
                cof (K v)) ->
             cof (cmkpair V1 V2 K).

co_call : cofv F (A ccont) ->
          cofv V A ->
          cof (ccall F V).

co_fst : cofv V (A c& B) ->
         ({v}{ov : cofv v A} cof (C v)) ->
         cof (cfst V C).

co_snd : cofv V (A c& B) ->
         ({v}{ov : cofv v B} cof (C v)) ->
         cof (csnd V C).

cov_unit : cofv c1 cunit.

cov_pair : cofv V1 A ->
           cofv V2 B ->
           cofv (cpair V1 V2) (A c& B).

cov_lam : ({x} cofv x A ->
               cof (C x)) ->
          cofv (clam C) (A ccont).


