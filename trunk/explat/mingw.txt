
(* install first *)
get MinGW-something.exe from SOURCEFORGE PAGE

get MSYS.exe from bad page INSTALL SECOND


(* vs tools... *)
dumpbin /imports file.exe
        /dependents

you also need zlib and libpng and libjpeg and libtiff. (If you try to skip jpeg and tiff, configure will work but linking will fail??)
zlib builds with ./configure; make ; make install
libpng builds with ./configure CFLAGS=-I/usr/local/include LIBS=-L/usr/local/lib ; make; make install
  (since zlib puts its stuff in /usr/local for whatever reason..)

libjpeg builds with ./configure ; make ; mkdir /usr/local/man/man1 ; make install ; make install-lib
 (* maybe those second to last two aren't necessary, but I did them search for install-lib *)

libtiff builds with ./configure ; make ; make install
                     (you may get illegal instructions in NTVDM??)
                     (or it may lock up; see below)

[the mingw "ports" do not work for me and anyway are only available for png]

(at this point it should be possible to ./configure && make SDL)

to build SDL_image, first
export SDL_CONFIG=/path/to/explat/SDL/sdl-config
./configure CFLAGS=-I/usr/local/include LIBS=-L/usr/local/lib ; make ; make install

Then in /usr/local/bin/ copy libpng-3.dll to libpng13.dll   (?)

And for mlton,

   Be sure to put the bin directory in /mingw, not /.
   Also, I had to edit /mingw/bin/mlton to use sh, not bash,
   since mingw doesn't ship with bash and then it tries to
   use cygwin's bash, DO NOT WANT

   I had to build gmp as well. This gave me NTVDM illegal instructions,
   too, during configure's "checking build system type..."
   ./configure --enable-shared --disable-static; make -j 4 ; make install
   (also 'make check' did work for the static version,
    but not when --enable-shared)

   Then in c:/MinGW/lib/mlton/include/platform/mingw.h
   I commented out the definition of timezone and gettimeofday,
   which are apparently already defined.

   (Also, in the makefile I had to instruct mlton to look in /usr/local/include
    for headers, so that it can find gmp where gmp's make install puts gmp.h,
    and maybe also for SDL's headers?)

OK, you're set!
   make -f makefile.mingw
   [t7eshero has newer build tech so that apps work from explorer;
    complex and imperfect]

Note: according to 
  http://www.spacejack.org/games/mingw/mingw-sdl.html
      it's possible to just use the MSVC binary library (.lib)?


--------------------------------------------------

8 Oct 2007 - vista

I tried "automated installer" (version 5.1.3.exe)
"bad page" (mingw homepage) sent me to sourceforge,
so I got msys-1.0.10.exe from there
 .. but then postinstall shell script:
   "couldn't reserve space for cygwin's heap, win32 error 0"
  (so I ran it myself from /c/msys/1.0/postinstall/pi.sh)
but then gcc just crashes or loops forever

... so I got a bunch of updates (particularly to msys and gcc)
and stuck them on top of my broke ass installation.

Then I did
  export CC=gcc-sjlj
since this version of GCC seems to work.

I also had to get an upgraded version of msys coreutils
that ships with manifests for install.exe and patch.exe,
since Vista automatically traps the execution of 
programs with such names.

For libtiff, configure 100%CPU locks on
  "checking whether gcc and cc understand -c and -o together..."
  so I comment this out of the configure script:
        if test "x$CC" != xcc; then
          echo "$as_me:$LINENO: checking whether $CC and cc understand -c and -o together" >&5
        echo $ECHO_N "checking whether $CC and cc understand -c and -o together... $ECHO_C" >&6

--------------------------------------------------

notes on building SDL apps with mlton

 .. t7eshero has better up-to-date building technology. look there.
 if you supply an extra include directory with -cc-opt, make it its
 own -cc-opt, not part of several in quotes. (You can provide separate
 -cc-opt flags to mlton.) It seems that somewhere along the line someone
 translates this from /usr/local/include to c:/msys/1.0/local/lib,
 which without that translation fails to find gmp.h.


16 Sep 2008:

Oops here's another thing to do:
edit c:/MinGW/lib/mlton/sml/basis/posix/io.sml
and change the line with isReg to add a handler:

    local
       val pos0 = Position.fromInt 0
       (* nb. added this handle via discussion on mlton list.
          without it, can't run without a console on mingw. *)
       fun isReg fd = FS.ST.isReg(FS.fstat fd) handle _ => false
       fun posFns (closed, fd) = 
          if (isReg fd)
       ...
